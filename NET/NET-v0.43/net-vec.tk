#  net 
#    an airplug compatible program
#    author: Bertrand Ducourthial AT utc.fr, newapp from NET v0.31
#    license type: free of charge license for academic and research purpose
#    see license.txt
### MODULE VECTORIAL CLOCK ####################################################
 
### VARIABLES OF THE MODULE ###################################################

package require math

# Valeur initiale de l'horloge vectorielle :
set NET_vec_h $NET_rc_vec
###############################################################################

  
### GRAPHICAL AREA OF THE MODULE ##############################################
labelframe .vec -pady 2 -padx 2 \
    -text "Vectorial clock \[$APP, ident = $APG_ident\]"  -fg $APG_int_coltitle

label .vec.t -text "Local vectorial clock = "
label .vec.h -textvariable NET_vecclk($::APG_ident) -width 4 -anchor w
pack .vec.t .vec.h -side left

###############################################################################

 
### COMMAND LINE OPTION #######################################################
foreach option $APG_lstargs {
    set name [lindex [split $option "="] 0]
    set value [lindex [split $option "="] 1]
 
    switch -- $name {
    # Nombre de site precise en argument de ligne de commande :
    --nbs {
        if { $value == "" } {
	APG_vrb_dispwarning "option $name found without argument, defaulting to three sites ; ignored" "net_vec"
	set NET_vec_nbs 3
        } else {
	set NET_vec_nbs $value
	APG_vrb_dispnotif "option $option found; snapshot and vectorial clock setup for $value sites" "net_vec"
            }
    }
    }
}
 
###############################################################################
 
  
### PROCEDURES OF THE MODULE ##################################################
proc NET_vec_init { } {
    for {set i 1} {$i <= $::NET_vec_nbs} {incr i} {
        set ::NET_vecclk($i) $::NET_vec_h
    }
} 

proc NET_vec_incr { } {
    incr ::NET_vecclk($::APG_ident)
}

proc NET_vec_incrandget { } {
    incr ::NET_vecclk($::APG_ident)
    return $::NET_vecclk($::APG_ident)
}

proc isnumeric { value } {
    if {![catch {expr {abs($value)}}]} {
        return 1
    }
    set value [string trimleft $value 0]
    if {![catch {expr {abs($value)}}]} {
        return 1
    }
    return 0
}

# Mise a jour de l'horloge :
proc NET_vec_update { clockmsg } {
    for {set i 1} {$i <= $::NET_vec_nbs} {incr i} {
	if { $i != $::APG_ident } {
	    set iclock [APG_msg_splitstr clockmsg $::NET_rc_mnemovecclk$i]
	    set ::NET_vecclk($i) [::math::max $iclock $::NET_vecclk($i)]
	} else {
	    NET_vec_incr
	}
    }
}

# Creation de la partie du message contenant l'horloge vectorielle :
proc NET_vec_msg {} {
   
    set vec_msg ""
    for {set i 1} {$i <= $::NET_vec_nbs} {incr i} { 
	set footer [APG_msg_createmsg $::NET_rc_mnemovecclk$i $::NET_vecclk($i)]
	set vec_msg [APG_msg_concatemsg $vec_msg $footer]
    }
    return $vec_msg;
}

###############################################################################

# Initialisation de l'horloge :
NET_vec_init

